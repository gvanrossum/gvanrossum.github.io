
<!--  Presentation generated by Internet Assistant for Microsoft PowerPoint 97 -->

<HTML>
<HEAD>

<meta name="GENERATOR" content="Microsoft Internet Assistant for Microsoft PowerPoint 97">
 <TITLE>Which API?</TITLE> 
</HEAD>

<BODY     >

<CENTER>
<TABLE WIDTH=100%> 
     <TR> <TD WIDTH=100% ALIGN=CENTER>
         <A HREF="sld001.htm"><IMG SRC="first.gif" BORDER=0 ALT="First"></A>
         <A HREF="sld044.htm"><IMG SRC="prev.gif" BORDER=0 ALT="Previous"></A>
         <A HREF="sld046.htm"><IMG SRC="next.gif" BORDER=0 ALT="Next"></A>
         <A HREF="sld054.htm"><IMG SRC="last.gif" BORDER=0 ALT="Last"></A>
         <IMG SRC="space.gif" BORDER=0>
         <A HREF="index.htm"><IMG SRC="info.gif" BORDER=0 ALT="Index"></A>
         <A HREF="http://www.python.org/~guido/"><IMG SRC="home.gif" BORDER=0 ALT="Home"></A>
         <A HREF="tsld045.htm"><IMG SRC="text.gif" BORDER=0 ALT="Text"></A>
     </TD> </TR>
     <TR> <TD WIDTH=100% ALIGN=CENTER>
         <IMG SRC="img045.gif" usemap="#Objmap" WIDTH=640 HEIGHT=480 BORDER=0>
     </TD> </TR>
</TABLE>
<P>Slide 45 of 54</P>
</CENTER>
<!-- <UL>
<H2>Which API?</H2>
</UL></P>
<P><UL>
<LI><H2>thread - traditional Python API
</H2>
<UL>
import thread
<BR><BR>thread.start_new(doit, (5,))
<BR># (can't easily wait for its completion)
<BR>
</UL></UL><UL>
<LI><H2>threading - resembles Java API
</H2>
<UL>
from threading import Thread # and much more...
<BR><BR>t = Thread(target=doit, args=(5,))
<BR>t.start()
<BR>t.join()</UL></UL></P>
<P>  -->
</Body>
</HTML>
