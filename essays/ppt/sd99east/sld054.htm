
<!--  Presentation generated by Internet Assistant for Microsoft PowerPoint 97 -->

<HTML>
<HEAD>

<meta name="GENERATOR" content="Microsoft Internet Assistant for Microsoft PowerPoint 97">
 <TITLE>A simple lock solution</TITLE> 
</HEAD>

<BODY     >

<CENTER>
<TABLE WIDTH=100%> 
     <TR> <TD WIDTH=100% ALIGN=CENTER>
         <A HREF="sld001.htm"><IMG SRC="first.gif" BORDER=0 ALT="First"></A>
         <A HREF="sld053.htm"><IMG SRC="prev.gif" BORDER=0 ALT="Previous"></A>
         <A HREF="sld055.htm"><IMG SRC="next.gif" BORDER=0 ALT="Next"></A>
         <A HREF="sld074.htm"><IMG SRC="last.gif" BORDER=0 ALT="Last"></A>
         <IMG SRC="space.gif" BORDER=0>
         <A HREF="index.htm"><IMG SRC="info.gif" BORDER=0 ALT="Index"></A>
         <A HREF="http://www.python.org/~guido/"><IMG SRC="home.gif" BORDER=0 ALT="Home"></A>
         <A HREF="tsld054.htm"><IMG SRC="text.gif" BORDER=0 ALT="Text"></A>
     </TD> </TR>
     <TR> <TD WIDTH=100% ALIGN=CENTER>
         <IMG SRC="img054.gif" usemap="#Objmap" WIDTH=640 HEIGHT=480 BORDER=0>
     </TD> </TR>
</TABLE>
<P>Slide 54 of 74</P>
</CENTER>
<!-- <UL>
<H2>A simple lock solution</H2>
</UL></P>
<P><UL>
<H2>import os, time
</H2>
</UL><UL>
<H2>
</H2>
</UL><UL>
<H2>class Lock:
</H2>
</UL><UL>
<H2>
</H2>
</UL><UL>
<H2>    def __init__(self, filename):
</H2>
</UL><UL>
<H2>        self.filename = filename
</H2>
</UL><UL>
<H2>        self.locked = 0
</H2>
</UL><UL>
<H2>
</H2>
</UL><UL>
<H2>    def lock(self):
</H2>
</UL><UL>
<H2>        assert not self.locked
</H2>
</UL><UL>
<H2>        while 1:
</H2>
</UL><UL>
<H2>        try:
</H2>
</UL><UL>
<H2>	        os.mkdir(self.filename)
</H2>
</UL><UL>
<H2>	        self.locked = 1
</H2>
</UL><UL>
<H2>	        return	# or break
</H2>
</UL><UL>
<H2>        except os.error, err:
</H2>
</UL><UL>
<H2>	        time.sleep(1)</H2>
</UL></P>
<P><UL>
<H2>    def unlock(self):
</H2>
</UL><UL>
<H2>        assert self.locked
</H2>
</UL><UL>
<H2>        self.locked = 0
</H2>
</UL><UL>
<H2>        os.rmdir(self.filename)
</H2>
</UL><UL>
<H2>
</H2>
</UL><UL>
<H2>   # auto-unlock when lock object is deleted
</H2>
</UL><UL>
<H2>    def __del__(self):
</H2>
</UL><UL>
<H2>        if self.locked:
</H2>
</UL><UL>
<H2>            self.unlock()
</H2>
</UL><UL>
<H2>
</H2>
</UL><UL>
<H2>
</H2>
</UL><UL>
<H2># for a big production with timeouts,
</H2>
</UL><UL>
<H2># see the Mailman source code (LockFile.py);
</H2>
</UL><UL>
<H2># it works on all Unixes and supports NFS;
</H2>
</UL><UL>
<H2># but not on Windows,
</H2>
</UL><UL>
<H2># and the code is very complex...</H2>
</UL></P>
<P>  -->
</Body>
</HTML>
